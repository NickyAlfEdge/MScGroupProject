<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.project.mapper.PermissionMapper">
  <resultMap id="BaseResultMap" type="com.team.project.model.Permission">
    <id column="permit_id" jdbcType="INTEGER" property="permitId" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="function_type" jdbcType="TINYINT" property="functionType" />
    <result column="function_url" jdbcType="VARCHAR" property="functionUrl" />
    <result column="function_name" jdbcType="VARCHAR" property="functionName" />
    <result column="function_seq" jdbcType="INTEGER" property="functionSeq" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    permit_id, pid, function_type, function_url, function_name, function_seq, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.team.project.model.PermissionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from permission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from permission
    where permit_id = #{permitId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from permission
    where permit_id = #{permitId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.team.project.model.PermissionExample">
    delete from permission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.team.project.model.Permission">
    insert into permission (permit_id, pid, function_type,
      function_url, function_name, function_seq, create_time,
      update_time)
    values (#{permitId,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{functionType,jdbcType=TINYINT},
      #{functionUrl,jdbcType=VARCHAR}, #{functionName,jdbcType=VARCHAR}, #{functionSeq,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.team.project.model.Permission">
    insert into permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="permitId != null">
        permit_id,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="functionType != null">
        function_type,
      </if>
      <if test="functionUrl != null">
        function_url,
      </if>
      <if test="functionName != null">
        function_name,
      </if>
      <if test="functionSeq != null">
        function_seq,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="permitId != null">
        #{permitId,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="functionType != null">
        #{functionType,jdbcType=TINYINT},
      </if>
      <if test="functionUrl != null">
        #{functionUrl,jdbcType=VARCHAR},
      </if>
      <if test="functionSeq != null">
        #{functionSeq,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.team.project.model.PermissionExample" resultType="java.lang.Long">
    select count(*) from permission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update permission
    <set>
      <if test="record.permitId != null">
        permit_id = #{record.permitId,jdbcType=INTEGER},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.functionType != null">
        function_type = #{record.functionType,jdbcType=TINYINT},
      </if>
      <if test="record.functionUrl != null">
        function_url = #{record.functionUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.functionName != null">
        function_name = #{record.functionName,jdbcType=VARCHAR},
      </if>
      <if test="record.functionSeq != null">
        function_seq = #{record.functionSeq,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update permission
    set permit_id = #{record.permitId,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=INTEGER},
      function_type = #{record.functionType,jdbcType=TINYINT},
      function_url = #{record.functionUrl,jdbcType=VARCHAR},
      function_name = #{record.functionName,jdbcType=VARCHAR},
      function_seq = #{record.functionSeq,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.team.project.model.Permission">
    update permission
    <set>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="functionType != null">
        function_type = #{functionType,jdbcType=TINYINT},
      </if>
      <if test="functionUrl != null">
        function_url = #{functionUrl,jdbcType=VARCHAR},
      </if>
      <if test="functionName != null">
        function_name = #{functionName,jdbcType=VARCHAR},
      </if>
      <if test="functionSeq != null">
        function_seq = #{functionSeq,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where permit_id = #{permitId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.team.project.model.Permission">
    update permission
    set pid = #{pid,jdbcType=INTEGER},
      function_type = #{functionType,jdbcType=TINYINT},
      function_url = #{functionUrl,jdbcType=VARCHAR},
      function_name = #{functionName,jdbcType=VARCHAR},
      function_seq = #{functionSeq,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where permit_id = #{permitId,jdbcType=INTEGER}
  </update>
</mapper>
