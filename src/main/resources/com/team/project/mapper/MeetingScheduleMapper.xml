<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.project.mapper.MeetingScheduleMapper">
  <resultMap id="BaseResultMap" type="com.team.project.model.MeetingSchedule">
    <id column="meeting_id" jdbcType="INTEGER" property="meetingId" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="meeting_type" jdbcType="INTEGER" property="meetingType" />
    <result column="week_no" jdbcType="INTEGER" property="weekNo" />
    <result column="day" jdbcType="INTEGER" property="day" />
    <result column="meeting_time" jdbcType="TIMESTAMP" property="meetingTime" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    meeting_id, group_id, meeting_type, week_no, day, meeting_time, creat_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.team.project.model.MeetingScheduleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from meeting_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from meeting_schedule
    where meeting_id = #{meetingId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from meeting_schedule
    where meeting_id = #{meetingId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.team.project.model.MeetingScheduleExample">
    delete from meeting_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.team.project.model.MeetingSchedule">
    insert into meeting_schedule (meeting_id, group_id, meeting_type,
      week_no, day, meeting_time,
      creat_time, update_time)
    values (#{meetingId,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, #{meetingType,jdbcType=INTEGER},
      #{weekNo,jdbcType=INTEGER}, #{day,jdbcType=INTEGER}, #{meetingTime,jdbcType=TIMESTAMP},
      #{creatTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.team.project.model.MeetingSchedule">
    insert into meeting_schedule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="meetingId != null">
        meeting_id,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="meetingType != null">
        meeting_type,
      </if>
      <if test="weekNo != null">
        week_no,
      </if>
      <if test="day != null">
        day,
      </if>
      <if test="meetingTime != null">
        meeting_time,
      </if>
      <if test="creatTime != null">
        creat_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="meetingId != null">
        #{meetingId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="meetingType != null">
        #{meetingType,jdbcType=INTEGER},
      </if>
      <if test="weekNo != null">
        #{weekNo,jdbcType=INTEGER},
      </if>
      <if test="day != null">
        #{day,jdbcType=INTEGER},
      </if>
      <if test="meetingTime != null">
        #{meetingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.team.project.model.MeetingScheduleExample" resultType="java.lang.Long">
    select count(*) from meeting_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update meeting_schedule
    <set>
      <if test="record.meetingId != null">
        meeting_id = #{record.meetingId,jdbcType=INTEGER},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.meetingType != null">
        meeting_type = #{record.meetingType,jdbcType=INTEGER},
      </if>
      <if test="record.weekNo != null">
        week_no = #{record.weekNo,jdbcType=INTEGER},
      </if>
      <if test="record.day != null">
        day = #{record.day,jdbcType=INTEGER},
      </if>
      <if test="record.meetingTime != null">
        meeting_time = #{record.meetingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creatTime != null">
        creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update meeting_schedule
    set meeting_id = #{record.meetingId,jdbcType=INTEGER},
      group_id = #{record.groupId,jdbcType=INTEGER},
      meeting_type = #{record.meetingType,jdbcType=INTEGER},
      week_no = #{record.weekNo,jdbcType=INTEGER},
      day = #{record.day,jdbcType=INTEGER},
      meeting_time = #{record.meetingTime,jdbcType=TIMESTAMP},
      creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.team.project.model.MeetingSchedule">
    update meeting_schedule
    <set>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="meetingType != null">
        meeting_type = #{meetingType,jdbcType=INTEGER},
      </if>
      <if test="weekNo != null">
        week_no = #{weekNo,jdbcType=INTEGER},
      </if>
      <if test="day != null">
        day = #{day,jdbcType=INTEGER},
      </if>
      <if test="meetingTime != null">
        meeting_time = #{meetingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatTime != null">
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where meeting_id = #{meetingId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.team.project.model.MeetingSchedule">
    update meeting_schedule
    set group_id = #{groupId,jdbcType=INTEGER},
      meeting_type = #{meetingType,jdbcType=INTEGER},
      week_no = #{weekNo,jdbcType=INTEGER},
      day = #{day,jdbcType=INTEGER},
      meeting_time = #{meetingTime,jdbcType=TIMESTAMP},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where meeting_id = #{meetingId,jdbcType=INTEGER}
  </update>

  <!-- schedules query by group. contains facilitator, client and schedules-->
  <resultMap id="scheduleListMap" type="com.team.project.dto.ScheduleDTO">
    <result column="group_id" />
    <result column="facilitator_name" property="facilitator"/>
    <result column="client_name" property="client"/>
    <result column="day" property="day"/>
    <association property="group" resultMap="com.team.project.mapper.GroupMapper.BaseResultMap"></association>
    <collection property="groupSchedules" resultMap="BaseResultMap"></collection>
  </resultMap>

  <select id="selectScheduleListByExample" parameterType="com.team.project.model.MeetingScheduleExample" resultMap="scheduleListMap">
    select CONCAT(b.forename,' ',b.surname) as facilitator_name, CONCAT(a.forename,' ',a.surname) as client_name,
    meeting_schedule.day as day, `group`.group_id as group_id, `group`.facilitator_id as facilitator_id,
    meeting_id, meeting_type, week_no, meeting_time
    from meeting_schedule
    LEFT OUTER JOIN `group` ON meeting_schedule.group_id = `group`.group_id
    LEFT OUTER JOIN project_preference ON meeting_schedule.group_id = project_preference.group_id
    LEFT OUTER JOIN project ON  project_preference.project_id = project.project_id
    LEFT OUTER JOIN `user` a ON project.client_id = a.user_id
    LEFT OUTER JOIN `user` b ON group.facilitator_id = b.user_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectGroupInProjectPreferenceWithoutSchedule"  resultMap="com.team.project.mapper.ProjectPreferenceMapper.BaseResultMap">
   SELECT project_id, group_id FROM `project_preference` a
   where not exists (select * from meeting_schedule b where b.group_id = a.group_id)
  </select>

  <select id="selectGroupWithSameClient" resultType="Integer">
    SELECT group_id from group_with_project
    where client_id = (select DISTINCT client_id from group_with_project where group_id = #{group_id})
    and group_id != #{group_id}
  </select>

  <select id="selectGroupWithSameFacilitator" resultType="Integer">
    SELECT group_id from group_with_project
    where facilitator_id = (select DISTINCT facilitator_id from group_with_project where group_id = #{group_id})
    and group_id != #{group_id}
  </select>

</mapper>
